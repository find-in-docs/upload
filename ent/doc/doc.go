// Code generated by entc, DO NOT EDIT.

package doc

const (
	// Label holds the string label denoting the doc type in the database.
	Label = "doc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldWordInts holds the string denoting the wordints field in the database.
	FieldWordInts = "word_ints"
	// FieldInputDocId holds the string denoting the inputdocid field in the database.
	FieldInputDocId = "input_doc_id"
	// FieldUserId holds the string denoting the userid field in the database.
	FieldUserId = "user_id"
	// FieldBusinessId holds the string denoting the businessid field in the database.
	FieldBusinessId = "business_id"
	// FieldStars holds the string denoting the stars field in the database.
	FieldStars = "stars"
	// FieldUseful holds the string denoting the useful field in the database.
	FieldUseful = "useful"
	// FieldFunny holds the string denoting the funny field in the database.
	FieldFunny = "funny"
	// FieldCool holds the string denoting the cool field in the database.
	FieldCool = "cool"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// Table holds the table name of the doc in the database.
	Table = "docs"
)

// Columns holds all SQL columns for doc fields.
var Columns = []string{
	FieldID,
	FieldWordInts,
	FieldInputDocId,
	FieldUserId,
	FieldBusinessId,
	FieldStars,
	FieldUseful,
	FieldFunny,
	FieldCool,
	FieldText,
	FieldDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(uint32) error
)
